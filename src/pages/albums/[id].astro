---
import { getCollection } from 'astro:content';
import { Image, getImage } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const albums = await getCollection('albums');
  const staticPaths = albums.map( album => {
    return {
      params: { id: album.id },
      props: { album },
    }
  });
	return staticPaths;
}

// const { id } = Astro.params;
const { album } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>("../../album/**/*");
const imagePaths = Object.keys(images);
---
<Layout>
  <div id="gallery">
    {
      imagePaths
        .filter(path => {
          const matches = path.match(/album\/([^\/]+)\//);
          return matches[1] === album.id
        })
        .map(async (imagePath) => {
          const image = images[imagePath]();
          let lightboxImage = await getImage({
            src: image,
          });
        const widths = [250, 360, 480, 640, 800, lightboxImage.attributes.width];
        const sizes = `(max-width: 360px) 250px, (max-width: 480px) 360px, (max-width: 640px) 480px, (max-width: 800px) 640px, (max-width: 1024px) 800px, ${lightboxImage.attributes.width}px`;
        lightboxImage = await getImage({
          src: image,
          widths,
          sizes,
        });
        const srcSet = lightboxImage.srcSet.values
          .map(value => `${value.url} ${value.descriptor}`)
          .join(", ");
          let thumbnailWidth, thumbnailHeight;
          const isLandscape =
            lightboxImage.attributes.width > lightboxImage.attributes.height;
          if (isLandscape) {
            thumbnailWidth = 250;
          }
          else {
            thumbnailHeight = 250;
          }
          return (
            <div>
              <a
                class="photo"
                href={lightboxImage.src}
                data-pswp-width={lightboxImage.attributes.width}
                data-pswp-height={lightboxImage.attributes.height}
                data-pswp-srcset={srcSet}
                target="_blank"
              >
                <Image
                  src={image}
                  alt={`${album.data.displayName} Photo`}
                  width={thumbnailWidth}
                  height={thumbnailHeight}
                />
              </a>
            </div>
          );
        })
    }
  </div>
  <style>
    #gallery {
      position: relative;
      display: grid;
      grid-template-columns: repeat(auto-fill, 250px);
      grid-template-rows: repeat(auto-fill, 250px);
      grid-gap: 3px;
      align-items: center;
      justify-items: center;
      justify-content: center;
      align-content: center;
    }
    .photo {
      display: flex;
      justify-content: center;
      align-items: center;
    }
  </style>
  <script>
    import PhotoSwipeLightbox from "photoswipe/lightbox";
    import "photoswipe/style.css";

    const lightbox = new PhotoSwipeLightbox({
      gallery: "#gallery",
      children: "a",
      pswpModule: () => import("photoswipe"),
    });

    lightbox.init();
  </script>

</Layout>
